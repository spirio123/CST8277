<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<project xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

<!-- tabwidth=4 preferspaces=true - indicate original formatting preferences; change to whatever you prefer -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.algonquincollege.cst8277</groupId>
    <artifactId>Employee-System-JPA-JUnit</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>Employee-System-JPA-JUnit</name>
    <description>More JPA, More Power - Employee System</description>

    <!-- why is everything a property? Because hard-coded values become part of
        Maven's immutable Model object and then their contents can't be changed.
        However, if the value is set in a user-defined property BEFORE the Model
        object is created, then it is possible to do: mvn clean compile -Dfoo.bar.version=1.2.3
        in order to (say for example) test out a newer version of some dependency
        without having to change the pom.xml.
    -->

    <properties>
        <!-- maven properties -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
        <maven.war.plugin.version>3.3.2</maven.war.plugin.version>
        <maven.compiler.release>17</maven.compiler.release>
        <maven.compiler.target>17</maven.compiler.target>
        <maven-project-info-reports-plugin.version>3.1.1</maven-project-info-reports-plugin.version>
        <maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
    
        <!-- code properties -->
        <logback.version>1.2.9</logback.version>
        <slf4j.version>1.7.32</slf4j.version>
        <connectorj.version>8.0.31</connectorj.version>
        <hibernate.version>5.6.3.Final</hibernate.version>
        <jakarta.annotation-api.version>1.3.5</jakarta.annotation-api.version>
        <jakarta.persistence.version>2.2.3</jakarta.persistence.version>
        
        <!-- test properties -->
        <h2.version>1.4.200</h2.version>
        <junit.version>5.7.0</junit.version>
        <junit-platform-suite-engine.version>1.8.1</junit-platform-suite-engine.version>
        <org.hamcrest.version>2.2</org.hamcrest.version>
    </properties>

    <dependencies>
        <!-- logging dependencies  -->
        
	    <!-- MySql ConnectorJ JDBC driver dependency -->  
	    <dependency>
	        <groupId>mysql</groupId>
	        <artifactId>mysql-connector-java</artifactId>
	        <version>${connectorj.version}</version>
	      </dependency>

          <!-- Jakarta EE 8 API dependencies -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>${jakarta.annotation-api.version}</version>
        </dependency>
        <dependency>
            <groupId>jakarta.persistence</groupId>
            <artifactId>jakarta.persistence-api</artifactId>
            <version>${jakarta.persistence.version}</version>
        </dependency>
          <!-- Hiberate dependency -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
            <!-- Note: because we are using the offical Jakarta EE 8 dependencies above,must instruct
            hibernate-entitymanagerto skip its own reliance on javax.persistence:javax.persistence-api
            dependency as there are some minor version mismatches -->
            <exclusions>
                <exclusion>
                    <groupId>javax.persistence</groupId>
                    <artifactId>javax.persistence-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- test dependencies -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>${h2.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest</artifactId>
            <version>${org.hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
            <version>${org.hamcrest.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-suite-engine</artifactId>
            <version>${junit-platform-suite-engine.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${maven.compiler.release}</source>
                    <target>${maven.compiler.target}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>${maven.war.plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <testFailureIgnore>true</testFailureIgnore>
                    <forkCount>0</forkCount>
                    <argLine>-Xmx1024m -XX:MaxPermSize=256m</argLine>
                    <includes>
                        <include>**/Test*.java</include>
                        <include>**/*Test.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
        </plugins>
    </build>

    <!-- Generate HTML Report -->
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven-project-info-reports-plugin.version}</version>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>index</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>

</project>